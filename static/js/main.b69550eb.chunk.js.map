{"version":3,"sources":["slices/counterSlice.ts","slices/index.ts","ui/molecules/Navbar.tsx","wrappers/ErrorBoundary.tsx","wrappers/QueryCacheProvider.tsx","wrappers/ReduxProvider.tsx","translations/TranslateButtons.tsx","translations/i18n.ts","wrappers/TranslationsWrapper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["counterSlice","createSlice","name","initialState","reducers","increment","state","action","payload","decrement","rootReducer","combineReducers","counter","reducer","Navbar","to","ErrorBoundary","props","hasError","error","errorInfo","console","log","JSON","stringify","componentStack","this","children","Component","QueryCacheProvider","queryCache","QueryCache","store","configureStore","ReduxProvider","TranslateButtons","i18n","useTranslation","changeLanguage","language","style","display","justifyContent","onClick","resources","de","translation","en","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","debug","TranslationsWrapper","Home","lazy","Login","Counter","User","App","fallback","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b69550eb.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: 0,\n  reducers: {\n    increment: (state, action) => state + action.payload,\n    decrement: (state) => state - 1,\n  },\n});\n","import { combineReducers } from \"redux\";\nimport { store } from \"../wrappers/ReduxProvider\";\nimport { counterSlice } from \"./counterSlice\";\n\nexport const rootReducer = combineReducers({\n  counter: counterSlice.reducer,\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport { counterSlice };\n","import { Link } from \"react-router-dom\";\n\nexport function Navbar() {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\".\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"login\">Login</Link>\n        </li>\n        <li>\n          <Link to=\"counter\">Counter</Link>\n        </li>\n        <li>\n          <Link to=\"user\">User</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import { Component, ErrorInfo, ReactNode } from \"react\";\n\ntype Props = {};\n\ntype State = {\n  hasError: boolean;\n};\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: any): Partial<State> | null {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    console.log(\"error: \" + error);\n    console.log(\"errorInfo: \" + JSON.stringify(errorInfo));\n    console.log(\"componentStack: \" + errorInfo.componentStack);\n  }\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong!</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import { ReactNode } from \"react\";\nimport { QueryCache, ReactQueryCacheProvider } from \"react-query\";\n\ntype QueryCacheProviderProps = { children?: ReactNode };\n\nexport function QueryCacheProvider(props: QueryCacheProviderProps) {\n  const queryCache = new QueryCache();\n\n  return (\n    <ReactQueryCacheProvider queryCache={queryCache}>\n      {props.children}\n    </ReactQueryCacheProvider>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { ReactNode } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"../slices\";\n\ntype ReduxProviderProps = {\n  children?: ReactNode;\n};\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nexport function ReduxProvider(props: ReduxProviderProps) {\n  return <Provider store={store}>{props.children}</Provider>;\n}\n","import { useTranslation } from \"react-i18next\";\n\nexport function TranslateButtons() {\n  const { i18n } = useTranslation();\n\n  function changeLanguage(language: string) {\n    i18n.changeLanguage(language);\n  }\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <button onClick={() => changeLanguage(\"de\")}>DE</button>\n      <button onClick={() => changeLanguage(\"en\")}>EN</button>\n    </div>\n  );\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport deTranslation from \"src/translations/locales/de/translation.json\";\nimport enTranslation from \"src/translations/locales/en/translation.json\";\n\nconst resources = {\n  de: { translation: deTranslation },\n  en: { translation: enTranslation },\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"en\",\n  keySeparator: \".\",\n  interpolation: {\n    escapeValue: false,\n  },\n  debug: false,\n});\n\nexport default i18n;\n","import { ReactNode } from \"react\";\nimport { TranslateButtons } from \"../translations\";\nimport \"../translations/i18n\";\n\ntype TranslationsWrapperProps = { children?: ReactNode };\n\nexport function TranslationsWrapper(props: TranslationsWrapperProps) {\n  return (\n    <>\n      {props.children}\n      <TranslateButtons />\n    </>\n  );\n}\n","import { lazy, Suspense } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Navbar } from \"./ui\";\nimport {\n  ErrorBoundary,\n  QueryCacheProvider,\n  ReduxProvider,\n  TranslationsWrapper,\n} from \"./wrappers\";\n\n/* React.lazy only supports default exports\n * https://reactjs.org/docs/code-splitting.html#named-exports\n */\nconst Home = lazy(() => import(\"./Home\"));\nconst Login = lazy(() => import(\"./Login\"));\nconst Counter = lazy(() => import(\"./Counter\"));\nconst User = lazy(() => import(\"./User\"));\n\ndeclare global {\n  interface Window {\n    SERVER_DATA: any;\n  }\n}\n\nexport function App() {\n  return (\n    <ErrorBoundary>\n      <ReduxProvider>\n        <QueryCacheProvider>\n          <TranslationsWrapper>\n            <BrowserRouter>\n              <Navbar />\n              <Suspense fallback={<div>\"Loading..\"</div>}>\n                <Routes>\n                  <Route path=\"/\" element={<Home />} />\n                  <Route path=\"login\" element={<Login />} />\n                  <Route path=\"counter\" element={<Counter />} />\n                  <Route path=\"user\" element={<User />} />\n                </Routes>\n              </Suspense>\n            </BrowserRouter>\n          </TranslationsWrapper>\n        </QueryCacheProvider>\n      </ReduxProvider>\n    </ErrorBoundary>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}